type FantasyPlayerGameSummary {
    gameweek: Int!
    points: Int!
    opposingTeamId: ID!
    opposingTeam: PremierLeagueTeam
    wasHome: Boolean!
    homeTeamScore: Int!
    awayTeamScore: Int!
    minutes: Int!
    goals: Int!
    assists: Int!
    cleanSheets: Int!
    conceded: Int!
    ownGoals: Int!
    penaltiesSaved: Int!
    penaltiesMissed: Int!
    yellowCards: Int!
    redCards: Int!
    saves: Int!
    bonus: Int!
}

type FantasyTeam {
    id: ID!
    name: String!
    manager: FantasyManager!
    leagues: [FantasyLeague]!
    startedEvent: Int!
    currentEvent: Int!
}

type FantasyManager {
    name: String!
}

type FantasyLeague {
    id: ID!
    name: String!
    standings: [FantasyLeagueStanding]
}

type FantasyLeagueStanding {
    teamId: ID!
    team: FantasyTeam
    playerName: String!
    teamName: String!
    rank: Int!
}

type FantasyTeamSearchResult {
    id: ID!
    teamName: String!
    managerName: String!
    team: FantasyTeam
}
